useContext permite compartilhar facilmente o estado em suas aplicações. Também é um recurso muito poderoso do React que permite compartilhar dados entre componentes, sem precisar passar props manualmente de um componente para outro. Retorna o valor de contexto para o componente de chamada.

Feito em três partes:
  1. Objeto do contexto.
  2. Provedor do Contexto (Provider)
  3. Hook useContext() que permite pegar os dados de dentro do contexto.

Sintaxe:

// Contexts / UserContext.js
import { useContext } from 'react'
const UserContext = useContext()

// Components / UserInfo.jsx
UserInfo(){
  const user = useContext(UserContext)
  return(
    <p>Olá, {user.name}</p>
  )
}

// App.jsx
const user = {name:''}
<UserContext.Provider value={user}>
  <UserInfo />
</UserContext.Provider>



-------------------------------------------------
useContext

./Components/PersonInfo.jsx
const person = useContext(PersonContext)
return (
  h1 {person.name}
)

-----------------------------------
./Context/PersonContext
export const PersonContext = createContext()

-------------------------------------
App.jsx

const person = { name : 'Gustavo'}
return
<PersonContext.Provider value={person}>
    <PersonInfo/>
<PersonContext.Provider >
